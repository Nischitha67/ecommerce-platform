                  version: '3.8'

                  services:
                    kafka:
                      image: apache/kafka:3.7.0
                      container_name: kafka
                      ports:
                        - "9092:9092"
                      environment:
                        KAFKA_NODE_ID: 1
                        KAFKA_PROCESS_ROLES: broker,controller
                        KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
                        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
                        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
                        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
                        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

                    postgres:
                      image: postgres:14
                      container_name: postgres
                      environment:
                        POSTGRES_USER: micro_user
                        POSTGRES_PASSWORD: MicroPass123
                      ports:
                        - "5432:5432"
                      volumes:
                        - postgres-data:/var/lib/postgresql/data
                        - ./db-init:/docker-entrypoint-initdb.d
                    eureka-server:
                      build: ./eureka-server
                      container_name: eureka-server
                      ports:
                        - "8761:8761"

                    cart-service:
                      build: ./cart-service
                      container_name: cart-service
                      depends_on:
                        - postgres
                        - kafka
                      ports:
                        - "8081:8081"
                      environment:
                        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cartdb
                        SPRING_DATASOURCE_USERNAME: micro_user
                        SPRING_DATASOURCE_PASSWORD: MicroPass123
                        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

                    order-service:
                      build: ./order-service
                      container_name: order-service
                      depends_on:
                        - postgres
                        - kafka
                      ports:
                        - "8082:8082"
                      environment:
                        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orderdb
                        SPRING_DATASOURCE_USERNAME: micro_user
                        SPRING_DATASOURCE_PASSWORD: MicroPass123
                        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

                    product-service:
                      build: ./product-service
                      container_name: product-service
                      depends_on:
                        - postgres
                        - kafka
                      ports:
                        - "8083:8083"
                      environment:
                        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/productdb
                        SPRING_DATASOURCE_USERNAME: micro_user
                        SPRING_DATASOURCE_PASSWORD: MicroPass123
                        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

                    auth-service:
                      build: ./auth-service
                      container_name: auth-service
                      depends_on:
                        - postgres
                        - kafka
                      ports:
                        - "8080:8080"
                      environment:
                        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
                        SPRING_DATASOURCE_USERNAME: micro_user
                        SPRING_DATASOURCE_PASSWORD: MicroPass123
                        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


                    api-gateway:
                        build: ./api-gateway
                        container_name: api-gateway
                        ports:
                          - "8085:8085"
                        depends_on:
                          - auth-service
                          - product-service
                          - order-service

                  volumes:
                    postgres-data:
